{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortByType","type","isResetButtonVisible","reorderedGoods","visibleGoods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,4DCfQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDDjBC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,GAClBF,EAAYE,IAQRC,EAAuBJ,IAAaX,EAASU,MAAQF,EACrDQ,EA5CD,SACLd,EADK,GAGM,IADTS,EACQ,EADRA,SAAUH,EACF,EADEA,WAENS,EAAY,YAAOf,GAmBzB,OAjBAe,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQT,GACN,KAAKX,EAASqB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKpB,EAASuB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EAqBgBS,CACrBrB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEb,KAAK,SACLa,UAAWC,IACT,iBAAkB,CAChB,WAAYjB,IAAaX,EAASqB,WAGtCQ,QAAS,WACPhB,EAAWb,EAASqB,WARxB,iCAcA,wBACEP,KAAK,SACLa,UAAWC,IACT,oBAAqB,CACnB,WAAYjB,IAAaX,EAASuB,SAGtCM,QAAS,WACPhB,EAAWb,EAASuB,SARxB,4BAcA,wBACET,KAAK,SACLa,UAAWC,IACT,oBAAqB,CACnB,YAAapB,IAGjBqB,QAxDQ,WACdpB,GAAc,SAAAqB,GAAO,OAAKA,MAgDtB,qBAYCf,GACC,wBACED,KAAK,SACLa,UAAU,4BACVE,QAzDI,WACZjB,EAAYZ,EAASU,MACrBD,GAAc,IAoDR,sBAUJ,6BACE,cAAC,EAAD,CAAWP,MAAOc,UEpI1Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7feb4c06.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { GoodsList } from './components/GoodsList';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - currGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const sortByType = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => {\n            sortByType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <GoodsList goods={reorderedGoods} />\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}